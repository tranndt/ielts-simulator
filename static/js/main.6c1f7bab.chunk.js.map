{"version":3,"sources":["components/Question lazy groupOptions: {} namespace object","data/reading-tests sync //.json$","data sync //.json$","components/Navigation/HomePage.js","components/assets/logo.jpg","components/Navigation/Header.js","components/Reading/PassageFrame.js","components/Question/MultipleChoiceSelectOneQuestionItem.js","components/Question/QuestionTaskDescription.js","components/Question/MultipleChoiceSelectOneQuestionTask.js","components/Question/MultipleChoiceSelectManyQuestionItem.js","components/Question/MultipleChoiceSelectManyQuestionTask.js","components/Question/TableCompletionQuestionItem.js","components/Table/DataTable.js","components/Question/TableCompletionQuestionTask.js","components/Question/NoteCompletionQuestionItem.js","components/Question/NoteCompletionQuestionTask.js","components/Question/SentenceCompletionQuestionItem.js","components/Question/SentenceCompletionQuestionTask.js","components/Question/SummaryCompletionQuestionItem.js","components/Question/SummaryCompletionQuestionTask.js","components/Question/SummaryCompletionWordListQuestionItem.js","components/Table/ListOfHeadingsTable.js","components/Question/SummaryCompletionWordListQuestionTask.js","components/Question/DiagramCompletionQuestionItem.js","components/Question/DiagramCompletionQuestionTask.js","components/Question/FlowChartCompletionQuestionItem.js","components/Question/FlowChartCompletionQuestionTask.js","components/Question/MatchingHeadingsQuestionItem.js","components/Question/MatchingHeadingsQuestionTask.js","components/Question/MatchingFeaturesQuestionItem.js","components/Question/MatchingFeaturesQuestionTask.js","components/Question/MatchingSentenceEndingsQuestionItem.js","components/Question/MatchingSentenceEndingsQuestionTask.js","components/Question/TrueFalseNotGivenQuestionItem.js","components/Question/TrueFalseNotGivenQuestionTask.js","components/Question/YesNoNotGivenQuestionItem.js","components/Question/YesNoNotGivenQuestionTask.js","components/Question/MatchingParagraphsQuestionItem.js","components/Question/MatchingParagraphsQuestionTask.js","components/Reading/QuestionFrame.js","components/Reading/SectionInfoFrame.js","components/Reading/TimerFrame.js","components/Reading/ReadingSectionFrame.js","components/Navigation/ReadingPracticesPage.js","components/Navigation/ReadingTestsPage.js","App.js","index.js"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","Object","Home","_jsxs","className","children","_jsx","Link","to","Header","PassageFrame","_ref","passageContent","hasParagraphMarkers","passageContext","passageTitle","passageSubtitle","passageMainText","passageParagraphs","highlightedText","setHighlightedText","useState","contextMenu","setContextMenu","renderTextWithHighlights","text","split","RegExp","join","part","index","includes","onContextMenu","event","preventDefault","selection","window","getSelection","toString","x","clientX","y","clientY","paragraph","_Fragment","style","top","left","onClick","handleHighlight","handleUndoHighlight","newHighlightedText","filter","MultipleChoiceSelectOneQuestionItem","questionItem","onItemGrading","showAnswers","userAnswer","setUserAnswer","handleChange","target","value","useEffect","isCorrect","correctAnswer","questionNumber","questionText","questionOptions","option","isCorrectAnswer","isSelected","optionClass","type","name","onChange","disabled","htmlFor","QuestionTaskDescription","taskDescription","replace","MultipleChoiceSelectOneQuestionTask","questionTask","onTaskGrading","correctAnswers","setCorrectAnswers","handleItemGrading","prevCorrect","taskQuestionNumberText","questionItems","length","MultipleChoiceSelectManyQuestionItem","selectedAnswers","onSelectionChange","itemIsSelected","setItemIsSelected","itemIsCorrect","answer","setOptionClass","display","flexDirection","alignContent","width","textAlign","checked","MultipleChoiceSelectManyQuestionTask","setSelectedAnswers","handleSelectionChange","prevAnswers","TableCompletionQuestionItem","autoComplete","DataTable","data","header","slice","row","rowIndex","cell","cellIndex","TableCompletionQuestionTask","questionMainText","exampleAnswer","class","NoteCompletionQuestionItem","NoteCompletionQuestionTask","questionMainTitle","content","SentenceCompletionQuestionItem","SentenceCompletionQuestionTask","SummaryCompletionQuestionItem","SummaryCompletionQuestionTask","SummaryCompletionWordListQuestionItem","heading","ListOfHeadingsTable","tableTitle","tableData","colSpan","SummaryCompletionWordListQuestionTask","questionListTitle","questionListOptions","DiagramCompletionQuestionItem","DiagramCompletionQuestionTask","imageSrc","setImageSrc","questionImgPath","loading","setLoading","async","image","default","error","console","loadImage","src","maxWidth","alt","FlowChartCompletionQuestionItem","FlowChartCompletionQuestionTask","MatchingHeadingsQuestionItem","MatchingHeadingsQuestionTask","MatchingFeaturesQuestionItem","MatchingFeaturesQuestionTask","MatchingSentenceEndingsQuestionItem","MatchingSentenceEndingsQuestionTask","TrueFalseNotGivenQuestionItem","minHeight","marginLeft","TrueFalseNotGivenQuestionTask","YesNoNotGivenQuestionItem","YesNoNotGivenQuestionTask","MatchingParagraphsQuestionItem","MatchingParagraphsQuestionTask","QuestionFrame","questionsList","totalQuestions","setTotalQuestions","totalCorrect","setTotalCorrect","setShowAnswers","total","reduce","acc","taskType","handleTaskGrading","toggleShowAnswers","prevShowAnswers","SectionInfoFrame","readingInfo","readingTitle","fontSize","fontStyle","readingSubtitle","TimerFrame","time","setTime","isRunning","setIsRunning","isEditing","setIsEditing","minutes","setMinutes","seconds","setSeconds","secondsInputRef","useRef","timer","setInterval","prevTime","clearInterval","formatTime","mins","Math","floor","secs","handleSetTime","alignItems","justifyContent","marginRight","handleStartPause","placeholder","border","borderBottom","backgroundColor","cursor","fontWeight","onBlur","handleBlur","totalSeconds","parseInt","ref","ReadingSectionFrame","passage","questionContent","ReadingPracticesPage","jsonResources","require","ReadingTestsPage","key","path","App","Routes","Route","element","HomePage","log","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.6c1f7bab.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 10;","var map = {\n\t\"./cam-11-test-1/cam-11-test-1-1.json\": 11,\n\t\"./cam-11-test-1/cam-11-test-1-2.json\": 12,\n\t\"./cam-11-test-1/cam-11-test-1-3.json\": 13,\n\t\"./cam-11-test-2/cam-11-test-2-1.json\": 14,\n\t\"./cam-11-test-2/cam-11-test-2-2.json\": 15,\n\t\"./cam-11-test-2/cam-11-test-2-3.json\": 16,\n\t\"./cam-11-test-3/cam-11-test-3-1.json\": 17,\n\t\"./cam-11-test-3/cam-11-test-3-2.json\": 18,\n\t\"./cam-11-test-3/cam-11-test-3-3.json\": 19,\n\t\"./cam-13-test-2/cam-13-test-2-1.json\": 20,\n\t\"./cam-13-test-2/cam-13-test-2-2.json\": 21,\n\t\"./cam-13-test-2/cam-13-test-2-3.json\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","var map = {\n\t\"./reading-practices/diagram-completion.json\": 37,\n\t\"./reading-practices/flow-chart-completion.json\": 38,\n\t\"./reading-practices/matching-features.json\": 39,\n\t\"./reading-practices/matching-headings.json\": 40,\n\t\"./reading-practices/matching-paragraphs.json\": 41,\n\t\"./reading-practices/matching-sentence-endings.json\": 42,\n\t\"./reading-practices/multiple-choice-select-many.json\": 43,\n\t\"./reading-practices/multiple-choice-select-one.json\": 44,\n\t\"./reading-practices/note-completion.json\": 45,\n\t\"./reading-practices/sentence-completion.json\": 46,\n\t\"./reading-practices/summary-completion-word-list.json\": 47,\n\t\"./reading-practices/summary-completion.json\": 48,\n\t\"./reading-practices/table-completion.json\": 49,\n\t\"./reading-practices/true-false-notgiven.json\": 50,\n\t\"./reading-practices/yes-no-notgiven.json\": 51,\n\t\"./reading-tests/cam-11-test-1/cam-11-test-1-1.json\": 11,\n\t\"./reading-tests/cam-11-test-1/cam-11-test-1-2.json\": 12,\n\t\"./reading-tests/cam-11-test-1/cam-11-test-1-3.json\": 13,\n\t\"./reading-tests/cam-11-test-2/cam-11-test-2-1.json\": 14,\n\t\"./reading-tests/cam-11-test-2/cam-11-test-2-2.json\": 15,\n\t\"./reading-tests/cam-11-test-2/cam-11-test-2-3.json\": 16,\n\t\"./reading-tests/cam-11-test-3/cam-11-test-3-1.json\": 17,\n\t\"./reading-tests/cam-11-test-3/cam-11-test-3-2.json\": 18,\n\t\"./reading-tests/cam-11-test-3/cam-11-test-3-3.json\": 19,\n\t\"./reading-tests/cam-13-test-2/cam-13-test-2-1.json\": 20,\n\t\"./reading-tests/cam-13-test-2/cam-13-test-2-2.json\": 21,\n\t\"./reading-tests/cam-13-test-2/cam-13-test-2-3.json\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 36;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\n\nfunction Home() {\n  return (\n<div className=\"home-page\">\n  <div className=\"jumbotron\">\n    <h1 className=\"display-4\">Welcome to the IELTS Test Simulator</h1>\n    <p>This web app provides a realistic simulation of the IELTS test, allowing you to practice under test conditions.</p>\n    <p>You can take practice tests, review your answers, and track your progress over time. Our goal is to help you achieve the best possible score on your IELTS test.</p>\n  </div>\n\n  {/* Listening Section */}\n  <div className=\"section-box\">\n    <h2>Listening Simulator</h2>\n    <p>The IELTS Listening test includes 4 recordings, each with 10 questions. You will hear a variety of native English accents, and the questions will assess your ability to understand main ideas, detailed factual information, and opinions.</p>\n    <p>With this simulator, you can practice listening to real-life conversations, lectures, and discussions, while answering IELTS-style questions to improve your listening skills.</p>\n    <ul>\n      <li><Link to=\"/ielts-simulator/listening-practices\">Listening Question Types</Link> (Coming soon)</li>\n      <li><Link to=\"/ielts-simulator/listening-tests\">Listening Practice Tests</Link> (Coming soon)</li>\n    </ul>\n  </div>\n\n  {/* Reading Section */}\n  <div className=\"section-box\">\n    <h2>Reading Simulator</h2>\n    <p>The IELTS Academic Reading test is divided into three parts, with a total of 40 questions. The passages range from descriptive and factual to discursive and analytical, and they may include diagrams, graphs, or illustrations.</p>\n    <p>With this simulator, you can familiarize yourself with the IELTS reading test format and question types, practice reading full passages and answering questions to enhance your reading comprehension.</p>\n    <ul>\n      <li><Link to=\"/ielts-simulator/reading-practices\">Reading Question Types</Link></li>\n      <li><Link to=\"/ielts-simulator/reading-tests\">Reading Practice Tests</Link></li>\n    </ul>\n  </div>\n\n  {/* Writing Section */}\n  <div className=\"section-box\">\n    <h2>Writing Simulator</h2>\n    <p>The IELTS Academic Writing test has two tasks. Task 1 asks you to summarize, describe, or explain information in a graph, table, chart, or diagram. Task 2 involves writing an essay in response to a point of view, argument, or problem.</p>\n    <p>With this simulator, you can practice both types of writing tasks, review sample answers, and receive tips on structuring your responses to achieve high marks.</p>\n    <ul>\n      <li><Link to=\"/ielts-simulator/writing-practices\">Writing Question Types</Link> (Coming soon)</li>\n      <li><Link to=\"/ielts-simulator/writing-tests\">Writing Practice Tests</Link> (Coming soon)</li>\n    </ul>\n  </div>\n</div>\n\n  );\n}\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/logo.d8d9d6c3.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.jpg';\nimport './Header.css';\n\nconst Header = () => {\n  const hostpage = \"/ielts-simulator\";\n  return (\n  <header className=\"header\">\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <ul>\n        <li><Link to=\"/ielts-simulator\">Home</Link></li>\n        {/* <li><Link to=\"/about\">About</Link></li> */}\n        <li><Link to= \"/ielts-simulator/reading-practices\">Reading Practices</Link></li>\n        <li><Link to=\"/ielts-simulator/reading-tests\">Reading Tests</Link></li>\n      </ul>\n    </nav>\n  </header>\n);\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport './ReadingStyles.css';\n\nfunction convertNewlinesToDoubleSpace(text) {\n  return text.replace(/\\n/g, '\\n\\n');\n}\n\nconst PassageFrame = ({ passageContent}) => {\n  const { hasParagraphMarkers, passageContext, passageTitle, passageSubtitle, passageMainText, passageParagraphs } = passageContent;\n  const [highlightedText, setHighlightedText] = useState([]);\n  const [contextMenu, setContextMenu] = useState(null);\n\n  const handleContextMenu = (event) => {\n    event.preventDefault();\n    const selection = window.getSelection().toString();\n    if (selection) {\n      setContextMenu({\n        x: event.clientX,\n        y: event.clientY,\n        text: selection,\n      });\n    }\n  };\n\n  const handleHighlight = () => {\n    setHighlightedText([...highlightedText, contextMenu.text]);\n    setContextMenu(null);\n  };\n\n  const handleUndoHighlight = () => {\n    const newHighlightedText = highlightedText.filter(text => !contextMenu.text.includes(text));\n    setHighlightedText(newHighlightedText);\n    setContextMenu(null);\n  };\n\n  const renderTextWithHighlights = (text) => {\n    let parts = text.split(new RegExp(`(${highlightedText.join('|')})`, 'g'));\n    return parts.map((part, index) => \n      highlightedText.includes(part) ? <mark key={index}>{part}</mark> : part\n    );\n  };\n\n  //    <p className=\"passage-text\">{renderTextWithHighlights(passageMainText)}</p> # Example of how to use renderTextWithHighlights\n  return (\n    <div className=\"passage-frame\" onContextMenu={handleContextMenu}>\n      <p className=\"passage-context\">{renderTextWithHighlights(passageContext)}</p>\n      {passageTitle && <h2 className=\"passage-title\">{passageTitle}</h2>}\n      {passageSubtitle && <h3 className=\"passage-subtitle\">{passageSubtitle}</h3>}\n      <div>\n      {passageParagraphs.map((paragraph, index) => (\n        hasParagraphMarkers ? \n          <><p><b>{renderTextWithHighlights(paragraph[0])}</b></p>\n          <p key={index} className=\"passage-text\">{renderTextWithHighlights(paragraph[1])}</p></>\n          :\n          <p key={index} className=\"passage-text\">{renderTextWithHighlights(paragraph)}</p>\n      ))}\n      </div>\n\n      {contextMenu && (\n        <div \n          className=\"context-menu\" \n          style={{ top: contextMenu.y, left: contextMenu.x }}\n        >\n          <button onClick={handleHighlight}>Highlight</button>\n          <button onClick={handleUndoHighlight}>Undo Highlight</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PassageFrame;\nexport { convertNewlinesToDoubleSpace };","import React, { useState, useEffect } from 'react';\nimport './QuestionStyles.css';\n\nfunction MultipleChoiceSelectOneQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n    // const isCorrect = userAnswer === questionItem.correctAnswer[0];\n    // onItemGrading(isCorrect);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"multiple-choice-question question-item\">\n      <div className=\"question-text\">{questionItem.questionNumber}. {questionItem.questionText}</div>\n      {questionItem.questionOptions.map((option, index) => {\n        const isCorrectAnswer = option[0] === questionItem.correctAnswer;\n        const isSelected = option[0] === userAnswer;\n        const isIncorrectAnswer = isSelected && !isCorrectAnswer;\n        const isCorrectButUnselected = !isSelected && isCorrectAnswer;\n\n        let optionClass = \"\";\n        if (showAnswers) {\n          if (isIncorrectAnswer) {\n            optionClass = \"incorrect-answer\"; // red\n          } else if (isSelected && isCorrectAnswer) {\n            optionClass = \"correct-answer\"; // green\n          } else if (isCorrectButUnselected) {\n            optionClass = \"correct-unselected-answer\"; // yellow\n          }\n        }\n\n        return (\n          <div key={index} className={optionClass}>\n            <input \n              type=\"radio\" \n              id={`option-${questionItem.questionNumber}-${index}`} \n              name={`mcq-${questionItem.questionNumber}`} \n              value={option[0]} \n              onChange={handleChange} \n              disabled={showAnswers} \n            />\n            <label htmlFor={`option-${questionItem.questionNumber}-${index}`}>\n              {option[0]}. {option[1]}\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default MultipleChoiceSelectOneQuestionItem;","import './QuestionStyles.css';\nimport { convertNewlinesToDoubleSpace } from '../Reading/PassageFrame';\n\n\nfunction QuestionTaskDescription({ taskDescription }) {\n    return (\n        <div className=\"question-task-description\">{convertNewlinesToDoubleSpace(taskDescription)}</div>\n    );\n}\n\nexport default QuestionTaskDescription;","import React, { useState, useEffect } from \"react\";\nimport MultipleChoiceSelectOneQuestionItem from \"./MultipleChoiceSelectOneQuestionItem\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction MultipleChoiceSelectOneQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"multiple-choice-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      {questionTask.questionItems.map((questionItem, index) => (\n        <MultipleChoiceSelectOneQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MultipleChoiceSelectOneQuestionTask;\n","import React, { useState, useEffect } from 'react';\nimport './QuestionStyles.css';\n\nfunction MultipleChoiceSelectManyQuestionItem({ id, questionItem, onItemGrading, showAnswers, correctAnswers, selectedAnswers, onSelectionChange }) {\n    const [itemIsSelected, setItemIsSelected] = useState(false);\n    const itemIsCorrect = correctAnswers.map((answer) => answer[0]).includes(questionItem[0]);\n    const [optionClass, setOptionClass] = useState(\"\");\n\n  const handleChange = (event) => {\n    setItemIsSelected(event.target.checked);\n    onSelectionChange(event.target.checked, questionItem[0]);\n  };\n\n  useEffect(() => {\n    if (showAnswers) {\n      onItemGrading(itemIsCorrect && itemIsSelected);\n      if (itemIsCorrect && itemIsSelected) {\n        setOptionClass(\"correct-answer\"); // green\n      }\n      else if (itemIsCorrect && !itemIsSelected) {\n        setOptionClass(\"correct-unselected-answer\"); // red\n      }\n      else if (itemIsSelected) {\n        setOptionClass(\"incorrect-answer\"); // red\n      }\n    }\n    else {\n      setOptionClass(\"\");\n    }\n\n  }, [showAnswers, itemIsSelected]);\n  \n  return (\n    <tr className={`multiple-choice-select-many-question question-item ${optionClass}`} style={{ display: 'flex', flexDirection: 'row', alignContent:'center'}}>\n      <td style={{width:'2em', textAlign:'center'}}> \n        <input \n          type=\"checkbox\" \n          onChange={handleChange} \n          disabled={showAnswers || (selectedAnswers.length >= correctAnswers.length && !selectedAnswers.map((answer) => answer[0]).includes(questionItem[0]))}\n        />\n      </td>\n      <td style={{width:'2em', textAlign: 'center'}}>\n        <div className=\"question-text\">{questionItem[0]}</div>\n      </td>\n      <td>\n        <div className=\"question-text\">{questionItem[1]}</div>\n      </td>\n    </tr>\n  );\n}\n\nexport default MultipleChoiceSelectManyQuestionItem;","import React, { useState, useEffect } from \"react\";\nimport MultipleChoiceSelectManyQuestionItem from \"./MultipleChoiceSelectManyQuestionItem\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction MultipleChoiceSelectManyQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  const handleSelectionChange = (isSelected, questionItem) => {\n    // Add or remove the selected answer from the list\n    setSelectedAnswers((prevAnswers) => {\n      if (isSelected) {\n        return [...prevAnswers, questionItem];\n      } else {\n        return prevAnswers.filter((answer) => answer !== questionItem);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers,selectedAnswers]);\n\n  return (\n    <div className=\"multiple-choice-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <table>\n        <tbody>\n            {questionTask.questionItems.map((questionItem, index) => (\n            <MultipleChoiceSelectManyQuestionItem\n              key={index}\n              id={index}\n              questionItem={questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n              correctAnswers={questionTask.correctAnswer}\n              selectedAnswers={selectedAnswers}\n              onSelectionChange={handleSelectionChange}\n            />\n          ))}\n        </tbody>\n      </table>\n      <div className=\"task-score\">\n        {showAnswers ? `Task Score: ${correctAnswers} / ${questionTask.correctAnswer.length}` : \" \"}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default MultipleChoiceSelectManyQuestionTask;","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction TableCompletionQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className=\"table-completion-question-item question-item\"\n    style={{display:'flex', flexDirection:'row'}}>\n      <td>\n        <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          id={`option-${questionItem.questionNumber}`}\n          name={`table-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers} // Disable input when answers are shown\n          autoComplete=\"off\" // Disable auto-fill\n        />\n      </td>\n      {showAnswers && (\n        <td\n          className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n          {questionItem.correctAnswer}\n        </td>\n      )}\n    </tr>\n  );\n}\n\nexport default TableCompletionQuestionItem;\n","import React from 'react';\nimport './TableStyles.css'; // Make sure to import your CSS file\n\nconst DataTable = ({ data }) => {\n  return (\n    <table className=\"table-bordered\">\n      <thead>\n        <tr>\n          {data[0].map((header, index) => (\n            <th key={index}>{header}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.slice(1).map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, cellIndex) => (\n              <td key={cellIndex}>{cell}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DataTable;","import React, { useState, useEffect } from \"react\";\nimport TableCompletionQuestionItem from \"./TableCompletionQuestionItem\";\nimport DataTable from \"../Table/DataTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction TableCompletionQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"table-completion-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <DataTable data={questionTask.questionMainText} />\n      {questionTask.exampleAnswer &&\n        <p><b>{questionTask.exampleAnswer}</b></p>\n      }\n      <div class='your-answers-text'>Your Answers:</div>\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <TableCompletionQuestionItem\n              key={index}\n              id={index}\n              questionItem = {questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n            />\n          ))}\n        </tbody>\n      </table>\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TableCompletionQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction NoteCompletionQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"note-completion-question-item question-item\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id={`option-${questionItem.questionNumber}`}\n                name={`table-${questionItem.questionNumber}`}\n                onChange={handleChange}\n                disabled={showAnswers} // Disable input when answers are shown\n                autoComplete=\"off\" // Disable auto-fill\n              />\n            </td>\n            {showAnswers && (\n              <td\n                className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n                {questionItem.correctAnswer}\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default NoteCompletionQuestionItem;\n","import React, { useState, useEffect } from \"react\";\nimport NoteCompletionQuestionItem from \"./NoteCompletionQuestionItem\";\nimport DataTable from \"../Table/DataTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction NoteCompletionQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"note-completion-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      {/* <DataTable data={questionTask.questionMainText} /> */}\n      <h3 style={{textAlign:'center'}}>{questionTask.questionMainTitle}</h3>\n      {questionTask.questionMainText.map((content, index) => (\n        <p>{content}</p>\n      ))}\n      <div class='your-answers-text'>Your Answers:</div>\n      {questionTask.questionItems.map((questionItem, index) => (\n        <NoteCompletionQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NoteCompletionQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction SentenceCompletionQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"sentence-completion-question-item question-item\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id={`option-${questionItem.questionNumber}`}\n                name={`table-${questionItem.questionNumber}`}\n                onChange={handleChange}\n                disabled={showAnswers} // Disable input when answers are shown\n                autoComplete=\"off\" // Disable auto-fill\n              />\n            </td>\n            {showAnswers && (\n              <td\n                className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n                {questionItem.correctAnswer}\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default SentenceCompletionQuestionItem;\n","import React, { useState, useEffect } from \"react\";\nimport SentenceCompletionQuestionItem from \"./SentenceCompletionQuestionItem\";\nimport DataTable from \"../Table/DataTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction SentenceCompletionQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"sentence-completion-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      {/* <DataTable data={questionTask.questionMainText} /> */}\n      <h3 style={{textAlign:'center'}}>{questionTask.questionMainTitle}</h3>\n      {questionTask.questionMainText.map((content, index) => (\n        <p>{content}</p>\n      ))}\n      <div class='your-answers-text'>Your Answers:</div>\n      {questionTask.questionItems.map((questionItem, index) => (\n        <SentenceCompletionQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SentenceCompletionQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction SummaryCompletionQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"summary-completion-question-item question-item\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id={`option-${questionItem.questionNumber}`}\n                name={`table-${questionItem.questionNumber}`}\n                onChange={handleChange}\n                disabled={showAnswers} // Disable input when answers are shown\n                autoComplete=\"off\" // Disable auto-fill\n              />\n            </td>\n            {showAnswers && (\n              <td\n                className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n                {questionItem.correctAnswer}\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default SummaryCompletionQuestionItem;\n","import React, { useState, useEffect } from \"react\";\nimport SummaryCompletionQuestionItem from \"./SummaryCompletionQuestionItem\";\nimport DataTable from \"../Table/DataTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction SummaryCompletionQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"summary-completion-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <h3 style={{textAlign:'center'}}>{questionTask.questionMainTitle}</h3>\n      {questionTask.questionMainText.map((content, index) => (\n        <p>{content}</p>\n      ))}\n      <div class='your-answers-text'>Your Answers:</div>\n      {questionTask.questionItems.map((questionItem, index) => (\n        <SummaryCompletionQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SummaryCompletionQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction SummaryCompletionWordListQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className=\"summmary-completion-word-list-question-item question-item\"\n    style={{display:'flex', flexDirection:'row'}}>\n      <td>\n        <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n      </td>\n      <td>\n        <select\n          name={`heading-${questionItem.questionNumber}`}\n          id={`heading-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers}\n        >\n          <option value=\"\"></option>\n          {questionItem.questionOptions.map((heading, index) => (\n            <option key={index} value={heading[0]}>\n              {heading[0] + \" - \" + heading[1]}\n            </option>\n          ))}\n        </select>\n      </td>\n      {showAnswers && (\n        <td\n          className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n          {questionItem.correctAnswer}\n        </td>\n      )}\n    </tr>\n  );\n}\n\nexport default SummaryCompletionWordListQuestionItem;\n","import React from 'react';\nimport './TableStyles.css';\n\nconst ListOfHeadingsTable = ({ tableTitle, tableData }) => {\n  return (\n    <table className=\"table-headings\">\n      <thead>\n        <tr>\n          <th colSpan={tableData[0].length} style={{ textAlign: 'center' }}>\n            {tableTitle}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {tableData.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, cellIndex) => (\n              <td key={cellIndex}>{cell}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ListOfHeadingsTable;","import React, { useState, useEffect } from \"react\";\nimport SummaryCompletionWordListQuestionItem from \"./SummaryCompletionWordListQuestionItem\";\nimport DataTable from \"../Table/DataTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport ListOfHeadingsTable from \"../Table/ListOfHeadingsTable\";\nimport './QuestionStyles.css';\n\nfunction SummaryCompletionWordListQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"summmary-completion-word-list-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <h3 style={{textAlign:'center'}}>{questionTask.questionMainTitle}</h3>\n      {/* {questionTask.questionMainText.map((content, index) => (\n        <p>{content}</p>\n      ))} */}\n      <p>{questionTask.questionMainText}</p>\n      <ListOfHeadingsTable tableTitle = {questionTask.questionListTitle} tableData={questionTask.questionListOptions} />\n      {questionTask.exampleAnswer &&\n        <p><b>{questionTask.exampleAnswer}</b></p>\n      }\n      <div class='your-answers-text'>Your Answers:</div>\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <SummaryCompletionWordListQuestionItem\n              key={index}\n              id={index}\n              questionItem = {questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n            />\n          ))}\n        </tbody>\n      </table>\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SummaryCompletionWordListQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction DiagramCompletionQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"diagram-completion-question-item question-item\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id={`option-${questionItem.questionNumber}`}\n                name={`table-${questionItem.questionNumber}`}\n                onChange={handleChange}\n                disabled={showAnswers} // Disable input when answers are shown\n                autoComplete=\"off\" // Disable auto-fill\n              />\n            </td>\n            {showAnswers && (\n              <td\n                className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n                {questionItem.correctAnswer}\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default DiagramCompletionQuestionItem;\n","import React, { useState, useEffect } from \"react\";\nimport DiagramCompletionQuestionItem from \"./DiagramCompletionQuestionItem\";\nimport DataTable from \"../Table/DataTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction DiagramCompletionQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [imageSrc, setImageSrc] = useState(questionTask.questionImgPath);\n  const [loading, setLoading] = useState(true);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        const image = await import(questionTask.questionImgPath);\n        setImageSrc(image.default);\n      } catch (error) {\n        console.error('Error loading image:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadImage();\n  }, [questionTask]);\n\n  return (\n    <div className=\"diagram-completion-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <h3 style={{ textAlign: 'center' }}>{questionTask.questionMainTitle}</h3>\n\n      <div className=\"question-img\">\n        {loading ? (\n          <p>Loading image...</p>\n        ) : (\n          <img src={imageSrc} style={{ maxWidth: '95%'}} alt=\"Diagram\" />\n        )}\n      </div>\n      <div className='your-answers-text'>Your Answers:</div>\n      {questionTask.questionItems.map((questionItem, index) => (\n        <DiagramCompletionQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default DiagramCompletionQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction FlowChartCompletionQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"flow-chart-completion-question-item question-item\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id={`option-${questionItem.questionNumber}`}\n                name={`table-${questionItem.questionNumber}`}\n                onChange={handleChange}\n                disabled={showAnswers} // Disable input when answers are shown\n                autoComplete=\"off\" // Disable auto-fill\n              />\n            </td>\n            {showAnswers && (\n              <td\n                className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n                {questionItem.correctAnswer}\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default FlowChartCompletionQuestionItem;\n","import React, { useState, useEffect } from 'react';\nimport FlowChartCompletionQuestionItem from './FlowChartCompletionQuestionItem';\nimport DataTable from '../Table/DataTable';\nimport QuestionTaskDescription from './QuestionTaskDescription';\nimport './QuestionStyles.css';\n\nfunction FlowChartCompletionQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [imageSrc, setImageSrc] = useState(questionTask.questionImgPath);\n  const [loading, setLoading] = useState(true);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        const image = await import(questionTask.questionImgPath);\n        setImageSrc(image.default);\n      } catch (error) {\n        console.error('Error loading image:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadImage();\n  }, [questionTask]);\n\n  return (\n    <div className=\"flow-chart-completion-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <h3 style={{ textAlign: 'center' }}>{questionTask.questionMainTitle}</h3>\n\n      <div className=\"question-img\">\n        {loading ? (\n          <p>Loading image...</p>\n        ) : (\n          <img src={imageSrc} style={{ maxWidth: '95%'}} alt=\"Flow Chart\" />\n        )}\n      </div>\n\n      <div className='your-answers-text'>Your Answers:</div>\n      {questionTask.questionItems.map((questionItem, index) => (\n        <FlowChartCompletionQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default FlowChartCompletionQuestionTask;","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingHeadingsQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className=\"matching-headings-question-item question-item\" style={{display:'flex', flexDirection:'row'}}>\n      <td style={{width:'5em', textAlign:'center'}}>\n        {questionItem.questionNumber}\n      </td>\n      <td style={{width:'5em', textAlign:'center'}}>\n        {questionItem.questionText}\n      </td>\n      <td style={{width:'5em', textAlign:'center'}}>\n        <select\n          name={`heading-${questionItem.questionNumber}`}\n          id={`heading-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers}\n        >\n          <option value=\"\"></option>\n          {questionItem.questionOptions.map((heading, index) => (\n            <option key={index} value={heading[0]}>\n              {heading[0]}\n            </option>\n          ))}\n        </select>\n      </td>\n      {showAnswers && (\n        <td\n          className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n          {questionItem.correctAnswer}\n        </td>\n      )}\n    </tr>\n  );\n}\n\nexport default MatchingHeadingsQuestionItem;\n\n\n  ","import React, { useState,useEffect} from 'react';\nimport MatchingHeadingsQuestionItem from \"./MatchingHeadingsQuestionItem\";\nimport ListOfHeadingsTable from \"../Table/ListOfHeadingsTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingHeadingsQuestionTask({ questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"matching-headings-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <ListOfHeadingsTable tableTitle = {questionTask.questionListTitle} tableData={questionTask.questionListOptions} />\n      {questionTask.exampleAnswer &&\n        <p><b>{questionTask.exampleAnswer}</b></p>\n      }\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <MatchingHeadingsQuestionItem\n              key={index}\n              id={index}\n              questionItem = {questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n            />\n          ))}\n        </tbody>\n      </table>\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MatchingHeadingsQuestionTask;\n\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingFeaturesQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className=\"matching-headings-question-item question-item\"\n    style={{display:'flex', flexDirection:'row'}}>\n      <td style={{width:'5em', textAlign:'center'}}>\n        {questionItem.questionNumber}\n      </td>\n      <td style={{width:'25em'}}>\n        {questionItem.questionText}\n      </td>\n      <td style={{width:'5em', textAlign:'center'}}>\n        <select\n          name={`heading-${questionItem.questionNumber}`}\n          id={`heading-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers}\n        >\n          <option value=\"\"></option>\n          {questionItem.questionOptions.map((heading, index) => (\n            <option key={index} value={heading[0]}>\n              {heading[0]}\n            </option>\n          ))}\n        </select>\n      </td>\n      {showAnswers && (\n        <td\n          className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n          {questionItem.correctAnswer}\n        </td>\n      )}\n    </tr>\n  );\n}\n\nexport default MatchingFeaturesQuestionItem;\n\n\n  ","import React, { useState,useEffect} from 'react';\nimport MatchingFeaturesQuestionItem from \"./MatchingFeaturesQuestionItem\";\nimport ListOfHeadingsTable from \"../Table/ListOfHeadingsTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingFeaturesQuestionTask({ questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"matching-features-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <ListOfHeadingsTable tableTitle = {questionTask.questionListTitle} tableData={questionTask.questionListOptions} />\n      {questionTask.exampleAnswer &&\n        <p><b>{questionTask.exampleAnswer}</b></p>\n      }\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <MatchingFeaturesQuestionItem\n              key={index}\n              id={index}\n              questionItem = {questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n            />\n          ))}\n        </tbody>\n      </table>\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MatchingFeaturesQuestionTask;\n\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingSentenceEndingsQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className=\"matching-sentence-endings-question-item question-item\"\n    style={{display:'flex', flexDirection:'row'}}>\n      <td style={{width:'5em', textAlign:'center'}}>\n        {questionItem.questionNumber}\n      </td>\n      <td style={{maxWidth:'30em'}}>\n        {questionItem.questionText}\n      </td>\n      <td style={{width:'5em', textAlign:'center'}}>\n        <select\n          name={`heading-${questionItem.questionNumber}`}\n          id={`heading-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers}\n        >\n          <option value=\"\"></option>\n          {questionItem.questionOptions.map((heading, index) => (\n            <option key={index} value={heading[0]}>\n              {heading[0]}\n            </option>\n          ))}\n        </select>\n      </td>\n      {showAnswers && (\n        <td\n          className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n          {questionItem.correctAnswer}\n        </td>\n      )}\n    </tr>\n  );\n}\n\nexport default MatchingSentenceEndingsQuestionItem;\n\n\n  ","import React, { useState,useEffect} from 'react';\nimport MatchingSentenceEndingsQuestionItem from \"./MatchingSentenceEndingsQuestionItem\";\nimport ListOfHeadingsTable from \"../Table/ListOfHeadingsTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingSentenceEndingsQuestionTask({ questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"matching-features-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <ListOfHeadingsTable tableTitle = {questionTask.questionListTitle} tableData={questionTask.questionListOptions} />\n      {questionTask.exampleAnswer &&\n        <p><b>{questionTask.exampleAnswer}</b></p>\n      }\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <MatchingSentenceEndingsQuestionItem\n              key={index}\n              id={index}\n              questionItem = {questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n            />\n          ))}\n        </tbody>\n      </table>\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MatchingSentenceEndingsQuestionTask;\n\n","import React, { useState, useEffect } from 'react';\nimport './QuestionStyles.css';\n\nfunction TrueFalseNotGivenQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [optionClass, setOptionClass] = useState(\"\");\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n      if (isCorrect) {\n        setOptionClass(\"correct-answer\");\n      } else {\n        setOptionClass(\"incorrect-answer\");\n      }\n    }\n    else {\n      setOptionClass(\"\");\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className={`true-false-notgiven-question-item question-item`}\n    style={{ display: 'flex', flexDirection: 'row', alignContent:'center', minHeight: '2.5em'}}>\n      <td style={{width:'2em', textAlign:'center'}}>\n        {questionItem.questionNumber}\n      </td>\n      <td style={{width:'26em'}}>\n        {questionItem.questionText}\n      </td>\n      <td style={{width:'6em'}}>\n        <select style={{width:'100%', textAlign:'center'}}\n          name={`heading-${questionItem.questionNumber}`}\n          id={`heading-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers}\n        >\n          <option value=\"\"></option>\n          {questionItem.questionOptions.map((heading, index) => (\n            <option key={index} value={heading}>\n              {heading}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td\n        className={optionClass}\n        style = {{marginLeft: '1.5em'}}>\n        {showAnswers ? questionItem.correctAnswer : \"\"}\n      </td>\n    </tr>\n  );\n}\n\nexport default TrueFalseNotGivenQuestionItem;","import React, { useState, useEffect } from \"react\";\nimport TrueFalseNotGivenQuestionItem from \"./TrueFalseNotGivenQuestionItem\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction TrueFalseNotGivenQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"true-false-notgiven-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <TrueFalseNotGivenQuestionItem\n              key={index}\n              id={index}\n              questionItem={questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n              />\n          ))}\n        </tbody>\n      </table>\n      <div className=\"task-score\">\n        {showAnswers ? `Task Score: ${correctAnswers} / ${questionTask.questionItems.length}` : \" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default TrueFalseNotGivenQuestionTask;\n","import React, { useState, useEffect } from 'react';\nimport './QuestionStyles.css';\n\nfunction YesNoNotGivenQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [optionClass, setOptionClass] = useState(\"\");\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n      if (isCorrect) {\n        setOptionClass(\"correct-answer\");\n      } else {\n        setOptionClass(\"incorrect-answer\");\n      }\n    }\n    else {\n      setOptionClass(\"\");\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className={`yes-no-notgiven-question-item question-item`}\n    style={{ display: 'flex', flexDirection: 'row', alignContent:'center', minHeight: '2.5em'}}>\n      <td style={{width:'2em', textAlign:'center'}}>\n        {questionItem.questionNumber}\n      </td>\n      <td style={{width:'27em'}}>\n        {questionItem.questionText}\n      </td>\n      <td style={{width:'6em'}}>\n        <select style={{width:'100%', textAlign:'center'}}\n          name={`heading-${questionItem.questionNumber}`}\n          id={`heading-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers}\n        >\n          <option value=\"\"></option>\n          {questionItem.questionOptions.map((heading, index) => (\n            <option key={index} value={heading}>\n              {heading}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td\n        className={optionClass}\n        style = {{marginLeft: '1em'}}>\n        {showAnswers ? questionItem.correctAnswer : \"\"}\n      </td>\n    </tr>\n  );\n}\n\nexport default YesNoNotGivenQuestionItem;","import React, { useState, useEffect } from \"react\";\nimport YesNoNotGivenQuestionItem from \"./YesNoNotGivenQuestionItem\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction YesNoNotGivenQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"yes-no-notgiven-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <YesNoNotGivenQuestionItem\n              key={index}\n              id={index}\n              questionItem={questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n              />\n          ))}\n        </tbody>\n      </table>\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default YesNoNotGivenQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingParagraphsQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <tr className=\"matching-headings-question-item question-item\"\n    style={{display:'flex', flexDirection:'row'}}>\n      <td style={{width:'5em', textAlign:'center'}}>\n        {questionItem.questionNumber}\n      </td>\n      <td style={{width:'25em'}}>\n        {questionItem.questionText}\n      </td>\n      <td style={{width:'5em', textAlign:'center'}}>\n        <select\n          name={`heading-${questionItem.questionNumber}`}\n          id={`heading-${questionItem.questionNumber}`}\n          onChange={handleChange}\n          disabled={showAnswers}\n        >\n          <option value=\"\"></option>\n          {questionItem.questionOptions.map((heading, index) => (\n            <option key={index} value={heading[0]}>\n              {heading[0]}\n            </option>\n          ))}\n        </select>\n      </td>\n      {showAnswers && (\n        <td\n          className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n          {questionItem.correctAnswer}\n        </td>\n      )}\n    </tr>\n  );\n}\n\nexport default MatchingParagraphsQuestionItem;\n\n\n  ","import React, { useState,useEffect} from 'react';\nimport MatchingParagraphsQuestionItem from \"./MatchingParagraphsQuestionItem\";\nimport ListOfHeadingsTable from \"../Table/ListOfHeadingsTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingParagraphsQuestionTask({ questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"matching-features-question-task\">\n      <h3>{questionTask.taskQuestionNumberText}</h3>\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <table>\n        <tbody>\n          {questionTask.questionItems.map((questionItem, index) => (\n            <MatchingParagraphsQuestionItem\n              key={index}\n              id={index}\n              questionItem = {questionItem}\n              onItemGrading={handleItemGrading}\n              showAnswers={showAnswers}\n            />\n          ))}\n        </tbody>\n      </table>\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questionItems.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MatchingParagraphsQuestionTask;\n\n","import React, { useEffect, useState } from \"react\";\nimport MultipleChoiceSelectOneQuestionTask from \"../Question/MultipleChoiceSelectOneQuestionTask\";\nimport MultipleChoiceSelectManyQuestionTask from \"../Question/MultipleChoiceSelectManyQuestionTask\";\nimport TableCompletionQuestionTask from \"../Question/TableCompletionQuestionTask\";\nimport NoteCompletionQuestionTask from \"../Question/NoteCompletionQuestionTask\";\nimport SentenceCompletionQuestionTask from \"../Question/SentenceCompletionQuestionTask\";\nimport SummaryCompletionQuestionTask from \"../Question/SummaryCompletionQuestionTask\";\nimport SummaryCompletionWordListQuestionTask from \"../Question/SummaryCompletionWordListQuestionTask\";\nimport DiagramCompletionQuestionTask from \"../Question/DiagramCompletionQuestionTask\";\nimport FlowChartCompletionQuestionTask from \"../Question/FlowChartCompletionQuestionTask\";\nimport MatchingHeadingsQuestionTask from \"../Question/MatchingHeadingsQuestionTask\";\nimport MatchingFeaturesQuestionTask from \"../Question/MatchingFeaturesQuestionTask\";\nimport MatchingSentenceEndingsQuestionTask from \"../Question/MatchingSentenceEndingsQuestionTask\";\nimport TrueFalseNotGivenQuestionTask from \"../Question/TrueFalseNotGivenQuestionTask\";\nimport YesNoNotGivenQuestionTask from \"../Question/YesNoNotGivenQuestionTask\";\nimport '../Question/QuestionStyles.css';\nimport MatchingParagraphsQuestionTask from \"../Question/MatchingParagraphsQuestionTask\";\n\nfunction QuestionFrame({ questionsList }) {\n  const [totalQuestions, setTotalQuestions] = useState(0); // Collect total number of questions at the start\n  const [totalCorrect, setTotalCorrect] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n\n  useEffect(() => {\n    // Calculate the total number of questions across all tasks when the component mounts\n    const total = questionsList.reduce((acc, questionTask) => {\n      // Add the number of questions in each task to the accumulator\n      if (questionTask.taskType === \"multiple-choice-select-many\") {\n        return acc + questionTask.correctAnswer.length;\n      }\n      return acc + questionTask.questionItems.length;\n    }, 0);\n    setTotalQuestions(total);\n    // Reset grading and answers visibility\n    setTotalCorrect(0);\n    setShowAnswers(false);\n  }, [questionsList]); // Only run when questionsList changes\n\n  const handleTaskGrading = (isCorrect) => {\n    // Update the total correct answers when a question task returns a correct answer\n    setTotalCorrect((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n  };\n\n  const toggleShowAnswers = () => {\n    setShowAnswers((prevShowAnswers) => !prevShowAnswers);\n    if (!showAnswers) {\n      setTotalCorrect(0);  // Reset correct answers when hiding answers\n    }\n  };\n\n\n  return (\n    <div className=\"question-frame\">\n      {questionsList.map((questionTask, index) => {\n        switch (questionTask.taskType) {\n          case \"multiple-choice-select-one\":\n            return (\n              <MultipleChoiceSelectOneQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"matching-headings\":\n            return (\n              <MatchingHeadingsQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"matching-features\":\n            return (\n              <MatchingFeaturesQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"matching-sentence-endings\":\n            return (\n              <MatchingSentenceEndingsQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"matching-paragraphs\":\n            return (\n              <MatchingParagraphsQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"table-completion\":\n            return (\n              <TableCompletionQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"note-completion\":\n            return (\n              <NoteCompletionQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"sentence-completion\":\n            return (\n              <SentenceCompletionQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"summary-completion\":\n            return (\n              <SummaryCompletionQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n            case \"summary-completion-word-list\":\n            return (\n              <SummaryCompletionWordListQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n            case \"diagram-completion\":\n            return (\n              <DiagramCompletionQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n            case \"flow-chart-completion\":\n            return (\n              <FlowChartCompletionQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n            case \"true-false-notgiven\":\n            return (\n              <TrueFalseNotGivenQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n            case \"yes-no-notgiven\":\n            return (\n              <YesNoNotGivenQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n            case \"multiple-choice-select-many\":\n            return (\n              <MultipleChoiceSelectManyQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          \n          default:\n            return null;\n        }\n      })}\n\n      <button id=\"show-answers-btn\" onClick={toggleShowAnswers}>\n        {showAnswers ? \"Hide Answers\" : \"Show Answers\"}\n      </button>\n\n      {showAnswers && (\n        <div id=\"correct-answers-count\">\n          You Scored: {totalCorrect} / {totalQuestions}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QuestionFrame;\n","import { convertNewlinesToDoubleSpace } from \"./PassageFrame\";\n\nconst SectionInfoFrame = ({readingInfo}) => (\n    <div className=\"section-info-frame\">\n      <h1 class=\"task-title\">{readingInfo.readingTitle}</h1>\n      <span class=\"task-subtitle\" style={{fontSize:'1.2em', fontStyle:'normal'}}>{readingInfo.readingSubtitle}</span>\n    </div>\n  );\n  \n  export default SectionInfoFrame;","import React, { useState, useEffect, useRef } from 'react';\n\nconst TimerFrame = () => {\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [minutes, setMinutes] = useState('');\n  const [seconds, setSeconds] = useState('');\n  const secondsInputRef = useRef(null);\n\n  useEffect(() => {\n    if (!isRunning || time <= 0) return;\n\n    const timer = setInterval(() => {\n      setTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          setIsRunning(false);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [isRunning, time]);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  const handleStartPause = () => {\n    setIsRunning(!isRunning);\n  };\n\n  const handleSetTime = () => {\n    setIsEditing(true);\n  };\n\n  const handleMinutesChange = (e) => {\n    setMinutes(e.target.value);\n  };\n\n  const handleSecondsChange = (e) => {\n    setSeconds(e.target.value);\n  };\n\n  const handleBlur = () => {\n    const totalSeconds = (parseInt(minutes, 10) || 0) * 60 + (parseInt(seconds, 10) || 0);\n    setTime(totalSeconds);\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"timer-frame\" style={{display:'flex', alignItems:'flex-end', justifyContent:'center', marginRight:'2em'}}>\n      <table>\n        <tbody>\n          <tr>\n            <td style={{width:'2em'}}>\n              <button onClick={handleStartPause}>\n                {isRunning ? 'Pause' : 'Start'}\n              </button>\n            </td>\n            <td style={{width:'2em'}}>\n              {isEditing ? (\n                <input\n                  type=\"text\"\n                  value={minutes}\n                  onChange={handleMinutesChange}\n                  // onBlur={handleBlur}\n                  placeholder=\"mm\"\n                  style={{\n                    width: '1.8em',\n                    textAlign: 'center',\n                    fontSize: '1.5em',\n                    border: 'none',\n                    borderBottom: '1px solid grey',\n                    backgroundColor: 'transparent',\n                    marginRight: '0.2em'\n                  }}\n                />\n              ) : (\n                <span onClick={handleSetTime} style={{ cursor: 'pointer', fontSize: '1.8em', fontWeight:'normal'}}>\n                  {formatTime(time).split(':')[0]}\n                </span>\n              )}\n            </td>\n            <td>:</td>\n            <td style={{width:'2em'}}>\n              {isEditing ? (\n                <input\n                  type=\"text\"\n                  value={seconds}\n                  onChange={handleSecondsChange}\n                  onBlur={handleBlur}\n                  placeholder=\"ss\"\n                  ref={secondsInputRef}\n                  style={{\n                    width: '1.8em',\n                    textAlign: 'center',\n                    fontSize: '1.5em',\n                    border: 'none',\n                    borderBottom: '1px solid grey',\n                    backgroundColor: 'transparent',\n                    marginLeft: '0.2em'\n                  }}\n                />\n              ) : (\n                <span onClick={handleSetTime} style={{ cursor: 'pointer', fontSize: '1.8em', fontWeight:'normal' }}>\n                  {formatTime(time).split(':')[1]}\n                </span>\n              )}\n            </td>\n\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TimerFrame;","import React from 'react';\nimport PassageFrame from './PassageFrame';\nimport QuestionFrame from '../Reading/QuestionFrame';\nimport SectionInfoFrame from './SectionInfoFrame';\nimport TimerFrame from './TimerFrame';\nimport './ReadingStyles.css';\n\nconst ReadingSectionFrame = ({ passage }) => (\n  <div className=\"passage-page\">\n    <SectionInfoFrame readingInfo={passage.readingInfo} />\n    <PassageFrame \n      passageContent = {passage.passageContent}\n    />\n    <QuestionFrame questionsList={passage.questionContent} />\n    <TimerFrame/>\n  </div>\n);\n\nexport default ReadingSectionFrame;","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ReadingPracticesPage.css';\n\nconst ReadingPracticesPage = () => (\n  <div className=\"reading-practices-page\">\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4\">Reading Practices</h1>\n      <p>Practice different types of reading questions to improve your skills.</p>\n    </div>\n    <table className=\"practices-table\">\n      <thead>\n        <tr>\n          <th>Question Type</th>\n          <th>Task Description</th>\n          <th>Recommended Time</th>\n        </tr>\n      </thead>\n      <tbody>\n      <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/diagram-completion\">Diagram Completion</Link></td>\n          <td>Fill in the blanks in a diagram based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/flow-chart-completion\">Flow Chart Completion</Link></td>\n          <td>Fill in the blanks in a flow chart based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/table-completion\">Table Completion</Link></td>\n          <td>Fill in the blanks in a table based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/note-completion\">Note Completion</Link></td>\n          <td>Fill in the blanks in notes based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/sentence-completion\">Sentence Completion</Link></td>\n          <td>Fill in the blanks in sentences based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/summary-completion\">Summary Completion</Link></td>\n          <td>Fill in the blanks in a summary based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/summary-completion-word-list\">Summary Completion (Word List)</Link></td>\n          <td>Fill in the blanks in a summary based on a list of words.</td>\n          <td>10 minutes</td>\n        </tr>\n\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/matching-headings\">Matching Headings</Link></td>\n          <td>Match headings to the correct paragraphs in the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/matching-features\">Matching Features</Link></td>\n          <td>Match features to the correct subjects in the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/matching-sentence-endings\">Matching Sentence Endings</Link></td>\n          <td>Match the correct ending to sentences based on information in the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/matching-paragraphs\">Matching Paragraphs</Link></td>\n          <td>Match paragraphs to the correct information in the question.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/true-false-notgiven\">True/False/Not Given</Link></td>\n          <td>Determine if statements are true, false, or not given based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/yes-no-notgiven\">Yes/No/Not Given</Link></td>\n          <td>Determine if statements are yes, no, or not given based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/multiple-choice-select-one\">Multiple Choice (Select One)</Link></td>\n          <td>Select the correct answer from a list of options.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/ielts-simulator/reading-practices/multiple-choice-select-many\">Multiple Choice (Select Many)</Link></td>\n          <td>Select all correct answers from a list of options.</td>\n          <td>10 minutes</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n\nexport default ReadingPracticesPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst jsonResources = require.context('../../data/reading-tests', true, /\\.json$/);\n\nconst ReadingTestsPage = () =>{\n  const createLinks = () =>  jsonResources.keys().map((key) => {\n    const path = key.replace('./', '').replace('.json', '');\n    const passage = jsonResources(key);\n    return (\n      <li><Link\n      to={`/ielts-simulator/reading-tests/${path}`}>{path}</Link></li>\n    );\n});\n  return(\n    <ul>\n      {createLinks()}\n      {/* <li><Link to=\"/ielts-simulator/reading-tests/cam-11-test-1/cam-11-test-1-1\">Reading Test 1</Link></li>\n       */}\n      {/* <li><Link to=\"/reading-tests/test-2\">Reading Test 2</Link></li>\n      <li><Link to=\"/reading-tests/test-3\">Reading Test 3</Link></li> */}\n    </ul>\n)};\n\nexport default ReadingTestsPage;","import React from 'react';\nimport { Route, Routes, Link } from 'react-router-dom';\nimport HomePage from './components/Navigation/HomePage';\nimport About from './components/About/About';\nimport Header from './components/Navigation/Header';\nimport ReadingSectionFrame from './components/Reading/ReadingSectionFrame';\nimport ReadingPracticesPage from './components/Navigation/ReadingPracticesPage';\nimport ReadingTestsPage from './components/Navigation/ReadingTestsPage';\nimport './App.css';\n\nconst jsonResources = require.context('./data/', true, /\\.json$/);\n\nfunction App() {\n  // Take in a path, load the json resources in that path and create routes from them\n  const createRoutes = () =>  jsonResources.keys().map((key) => {\n      const path = key.replace('./', '').replace('.json', '');\n      const passage = jsonResources(key);\n      console.log(key)\n      return (\n        <Route\n          key={path}\n          path={`/ielts-simulator/${path}`}\n          element={<ReadingSectionFrame passage={passage} />}\n        />\n      );\n  });\n  \n    \n  return (\n    <div>\n      <Header />\n      <Routes>\n        <Route path=\"/ielts-simulator\" element={<HomePage />} />\n        <Route path=\"/ielts-simulator/reading-practices\" element={<ReadingPracticesPage />} />\n        <Route path=\"/ielts-simulator/reading-tests\" element={<ReadingTestsPage />} />\n        {createRoutes()}\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}