{"version":3,"sources":["components/Navigation/HomePage.js","components/assets/logo.jpg","components/Navigation/Header.js","components/Reading/PassageFrame.js","components/Question/MultipleChoiceQuestionItem.js","components/Question/QuestionTaskDescription.js","components/Question/MultipleChoiceQuestionTask.js","components/Question/TableCompletionQuestionItem.js","components/Table/DataTable.js","components/Question/TableCompletionQuestionTask.js","components/Question/MatchingHeadingsQuestionItem.js","components/Table/ListOfHeadingsTable.js","components/Question/MatchingHeadingsQuestionTask.js","components/Reading/QuestionFrame.js","components/Reading/SectionInfoFrame.js","components/Reading/TimerFrame.js","components/Reading/ReadingSectionFrame.js","components/Navigation/ReadingPracticesPage.js","components/Navigation/ReadingTestsPage.js","App.js","index.js"],"names":["Home","_jsxs","className","children","_jsx","Link","to","Header","convertNewlinesToDoubleSpace","text","replace","PassageFrame","_ref","passageContext","passageTitle","passageSubtitle","passageText","highlightedText","setHighlightedText","useState","contextMenu","setContextMenu","renderTextWithHighlights","split","RegExp","join","map","part","index","includes","onContextMenu","event","preventDefault","selection","window","getSelection","toString","x","clientX","y","clientY","style","top","left","onClick","handleHighlight","handleUndoHighlight","newHighlightedText","filter","MultipleChoiceQuestionItem","id","questionItem","onItemGrading","showAnswers","userAnswer","setUserAnswer","handleChange","target","value","useEffect","isCorrect","correctAnswer","questionNumber","questionText","questionOptions","option","isCorrectAnswer","isSelected","optionClass","type","name","onChange","disabled","htmlFor","QuestionTaskDescription","taskDescription","MultipleChoiceQuestionTask","questionTask","onTaskGrading","correctAnswers","setCorrectAnswers","handleItemGrading","prevCorrect","questions","length","TableCompletionQuestionItem","autoComplete","DataTable","data","header","slice","row","rowIndex","cell","cellIndex","TableCompletionQuestionTask","questionContent","class","MatchingHeadingsQuestionItem","width","textAlign","heading","ListOfHeadingsTable","colSpan","MatchingHeadingsQuestionTask","headingsList","padding","exampleAnswer","QuestionFrame","questionsList","totalQuestions","setTotalQuestions","totalCorrect","setTotalCorrect","setShowAnswers","total","reduce","acc","handleTaskGrading","questionType","toggleShowAnswers","prevShowAnswers","SectionInfoFrame","taskTitle","taskSubtitle","TimerFrame","taskTime","time","setTime","timer","setInterval","prevTime","clearInterval","color","seconds","mins","Math","floor","secs","formatTime","ReadingSectionFrame","passage","ReadingPracticesPage","ReadingTestsPage","App","Routes","Route","path","element","HomePage","passageMcq","passageTable","passageMatching","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.faa04c64.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\n\nfunction Home() {\n  return (\n<div className=\"home-page\">\n  <div className=\"jumbotron\">\n    <h1 className=\"display-4\">Welcome to the IELTS Test Simulator</h1>\n    <p>This web app provides a realistic simulation of the IELTS test, allowing you to practice under test conditions.</p>\n    <p>You can take practice tests, review your answers, and track your progress over time. Our goal is to help you achieve the best possible score on your IELTS test.</p>\n  </div>\n\n  {/* Listening Section */}\n  <div className=\"section-box\">\n    <h2>Listening</h2>\n    <p>The IELTS Listening test includes 4 recordings, each with 10 questions. You will hear a variety of native English accents, and the questions will assess your ability to understand main ideas, detailed factual information, and opinions.</p>\n    <p>With this simulator, you can practice listening to real-life conversations, lectures, and discussions, while answering IELTS-style questions to improve your listening skills.</p>\n    <ul>\n      <li><Link to=\"/listening-practices\">Listening Question Types</Link></li>\n      <li><Link to=\"/listening-tests\">Listening Practice Tests</Link></li>\n    </ul>\n  </div>\n\n  {/* Reading Section */}\n  <div className=\"section-box\">\n    <h2>Reading</h2>\n    <p>The IELTS Academic Reading test is divided into three parts, with a total of 40 questions. The passages range from descriptive and factual to discursive and analytical, and they may include diagrams, graphs, or illustrations.</p>\n    <p>With this simulator, you can familiarize yourself with the IELTS reading test format and question types, practice reading full passages and answering questions to enhance your reading comprehension.</p>\n    <ul>\n      <li><Link to=\"/reading-practices\">Reading Question Types</Link></li>\n      <li><Link to=\"/reading-tests\">Reading Practice Tests</Link></li>\n    </ul>\n  </div>\n\n  {/* Writing Section */}\n  <div className=\"section-box\">\n    <h2>Writing</h2>\n    <p>The IELTS Academic Writing test has two tasks. Task 1 asks you to summarize, describe, or explain information in a graph, table, chart, or diagram. Task 2 involves writing an essay in response to a point of view, argument, or problem.</p>\n    <p>With this simulator, you can practice both types of writing tasks, review sample answers, and receive tips on structuring your responses to achieve high marks.</p>\n    <ul>\n      <li><Link to=\"/writing-practices\">Writing Question Types</Link></li>\n      <li><Link to=\"/writing-tests\">Writing Practice Tests</Link></li>\n    </ul>\n  </div>\n</div>\n\n  );\n}\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/logo.d8d9d6c3.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.jpg';\nimport './Header.css';\n\nconst Header = () => {\n  const hostpage = \"/ielts-simulator\";\n  return (\n  <header className=\"header\">\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <ul>\n        <li><Link to=\"/ielts-simulator\">Home</Link></li>\n        {/* <li><Link to=\"/about\">About</Link></li> */}\n        <li><Link to= \"/ielts-simulator/reading-practices\">Reading Practices</Link></li>\n        <li><Link to=\"/ielts-simulator/reading-tests\">Reading Tests</Link></li>\n      </ul>\n    </nav>\n  </header>\n);\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport './ReadingStyles.css';\n\nfunction convertNewlinesToDoubleSpace(text) {\n  return text.replace(/\\n/g, '\\n\\n');\n}\n\nconst PassageFrame = ({ passageContext, passageTitle, passageSubtitle, passageText }) => {\n  const [highlightedText, setHighlightedText] = useState([]);\n  const [contextMenu, setContextMenu] = useState(null);\n\n  const handleContextMenu = (event) => {\n    event.preventDefault();\n    const selection = window.getSelection().toString();\n    if (selection) {\n      setContextMenu({\n        x: event.clientX,\n        y: event.clientY,\n        text: selection,\n      });\n    }\n  };\n\n  const handleHighlight = () => {\n    setHighlightedText([...highlightedText, contextMenu.text]);\n    setContextMenu(null);\n  };\n\n  const handleUndoHighlight = () => {\n    const newHighlightedText = highlightedText.filter(text => !contextMenu.text.includes(text));\n    setHighlightedText(newHighlightedText);\n    setContextMenu(null);\n  };\n\n  const renderTextWithHighlights = (text) => {\n    let parts = text.split(new RegExp(`(${highlightedText.join('|')})`, 'g'));\n    return parts.map((part, index) => \n      highlightedText.includes(part) ? <mark key={index}>{part}</mark> : part\n    );\n  };\n\n  return (\n    <div className=\"passage-frame\" onContextMenu={handleContextMenu}>\n      <p className=\"passage-context\">{renderTextWithHighlights(convertNewlinesToDoubleSpace(passageContext))}</p>\n      <h2 className=\"passage-title\">{passageTitle}</h2>\n      <h3 className=\"passage-subtitle\">{passageSubtitle}</h3>\n      <p className=\"passage-text\">{renderTextWithHighlights(convertNewlinesToDoubleSpace(passageText))}</p>\n      {contextMenu && (\n        <div \n          className=\"context-menu\" \n          style={{ top: contextMenu.y, left: contextMenu.x }}\n        >\n          <button onClick={handleHighlight}>Highlight</button>\n          <button onClick={handleUndoHighlight}>Undo Highlight</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PassageFrame;\nexport { convertNewlinesToDoubleSpace };","import React, { useState, useEffect } from 'react';\nimport './QuestionStyles.css';\n\nfunction MultipleChoiceQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n    // const isCorrect = userAnswer === questionItem.correctAnswer[0];\n    // onItemGrading(isCorrect);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer[0];\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"multiple-choice-question question-item\">\n      <div className=\"question-text\">{questionItem.questionNumber}. {questionItem.questionText}</div>\n      {questionItem.questionOptions.map((option, index) => {\n        const isCorrectAnswer = option[0] === questionItem.correctAnswer[0];\n        const isSelected = option[0] === userAnswer;\n        const isIncorrectAnswer = isSelected && !isCorrectAnswer;\n        const isCorrectButUnselected = !isSelected && isCorrectAnswer;\n\n        let optionClass = \"\";\n        if (showAnswers) {\n          if (isIncorrectAnswer) {\n            optionClass = \"incorrect-answer\"; // red\n          } else if (isSelected && isCorrectAnswer) {\n            optionClass = \"correct-answer\"; // green\n          } else if (isCorrectButUnselected) {\n            optionClass = \"correct-unselected-answer\"; // yellow\n          }\n        }\n\n        return (\n          <div key={index} className={optionClass}>\n            <input \n              type=\"radio\" \n              id={`option-${questionItem.questionNumber}-${index}`} \n              name={`mcq-${questionItem.questionNumber}`} \n              value={option[0]} \n              onChange={handleChange} \n              disabled={showAnswers} \n            />\n            <label htmlFor={`option-${questionItem.questionNumber}-${index}`}>\n              {option[0]}. {option[1]}\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default MultipleChoiceQuestionItem;","import './QuestionStyles.css';\nimport { convertNewlinesToDoubleSpace } from '../Reading/PassageFrame';\n\n\nfunction QuestionTaskDescription({ taskDescription }) {\n    return (\n        <div className=\"question-task-description\">{convertNewlinesToDoubleSpace(taskDescription)}</div>\n    );\n}\n\nexport default QuestionTaskDescription;","import React, { useState, useEffect } from \"react\";\nimport MultipleChoiceQuestionItem from \"./MultipleChoiceQuestionItem\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction MultipleChoiceQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"multiple-choice-question-task\">\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      {questionTask.questions.map((questionItem, index) => (\n        <MultipleChoiceQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questions.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MultipleChoiceQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\nfunction TableCompletionQuestionItem({ questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"table-completion-question-item question-item\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <span className=\"fixed-width\">{questionItem.questionNumber}.</span>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id={`option-${questionItem.questionNumber}`}\n                name={`table-${questionItem.questionNumber}`}\n                onChange={handleChange}\n                disabled={showAnswers} // Disable input when answers are shown\n                autoComplete=\"off\" // Disable auto-fill\n              />\n            </td>\n            {showAnswers && (\n              <td\n                className={(userAnswer === questionItem.correctAnswer) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n                {questionItem.correctAnswer}\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TableCompletionQuestionItem;\n","import React from 'react';\nimport './TableStyles.css'; // Make sure to import your CSS file\n\nconst DataTable = ({ data }) => {\n  return (\n    <table className=\"table-bordered\">\n      <thead>\n        <tr>\n          {data[0].map((header, index) => (\n            <th key={index}>{header}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.slice(1).map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, cellIndex) => (\n              <td key={cellIndex}>{cell}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DataTable;","import React, { useState, useEffect } from \"react\";\nimport TableCompletionQuestionItem from \"./TableCompletionQuestionItem\";\nimport DataTable from \"../Table/DataTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\nfunction TableCompletionQuestionTask({ id, questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"table-completion-question-task\">\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <DataTable data={questionTask.questionContent} />\n      <div class='your-answers-text'>Your Answers:</div>\n      {questionTask.questions.map((questionItem, index) => (\n        <TableCompletionQuestionItem\n          key={index}\n          id={index}\n          questionItem={questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questions.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TableCompletionQuestionTask;\n","import React, {useState, useEffect} from \"react\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingHeadingsQuestionItem({ id, questionItem, onItemGrading, showAnswers }) {\n  const [userAnswer, setUserAnswer] = useState(null);\n\n  const handleChange = (event) => {\n    setUserAnswer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (showAnswers && userAnswer !== null) {\n      const isCorrect = userAnswer === questionItem.correctAnswer;\n      onItemGrading(isCorrect);\n    }\n  }, [showAnswers, userAnswer]);\n\n  return (\n    <div className=\"matching-headings-question-item question-item\">\n    <table>\n      <tbody >\n        <tr >\n          <td style={{width:'5em', textAlign:'center'}}>\n            {questionItem.questionNumber}\n          </td>\n          <td style={{width:'5em', textAlign:'center'}}>\n            {questionItem.questionText}\n          </td>\n          <td style={{width:'5em', textAlign:'center'}}>\n            <select\n              name={`heading-${questionItem.questionNumber}`}\n              id={`heading-${questionItem.questionNumber}`}\n              onChange={handleChange}\n              disabled={showAnswers}\n            >\n              <option value=\"\"></option>\n              {questionItem.questionOptions.map((heading, index) => (\n                <option key={index} value={heading[0]}>\n                  {heading[0]}\n                </option>\n              ))}\n            </select>\n          </td>\n          {showAnswers && (\n            <td\n              className={(userAnswer === questionItem.correctAnswer[0]) ? \"correct-answer\" : \"correct-answer-non-matching\"}>\n              {questionItem.correctAnswer[0]}\n            </td>\n          )}\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  );\n}\n\nexport default MatchingHeadingsQuestionItem;\n\n\n  ","import React from 'react';\nimport './TableStyles.css';\n\nconst ListOfHeadingsTable = ({ data }) => {\n  return (\n    <table className=\"table-headings\">\n      <thead>\n        <tr>\n          <th colSpan={data[0].length} style={{ textAlign: 'center' }}>\n            List of Headings\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, cellIndex) => (\n              <td key={cellIndex}>{cell}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ListOfHeadingsTable;","import React, { useState,useEffect} from 'react';\nimport MatchingHeadingsQuestionItem from \"./MatchingHeadingsQuestionItem\";\nimport ListOfHeadingsTable from \"../Table/ListOfHeadingsTable\";\nimport QuestionTaskDescription from \"./QuestionTaskDescription\";\nimport './QuestionStyles.css';\n\n\nfunction MatchingHeadingsQuestionTask({ questionTask, onTaskGrading, showAnswers }) {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  const handleItemGrading = (isCorrect) => {\n    // Increment or decrement based on whether the answer is correct or incorrect\n    setCorrectAnswers((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n    onTaskGrading(isCorrect);  // Notify parent of each individual grading event\n  };\n\n  useEffect(() => {\n    if (!showAnswers) {\n      setCorrectAnswers(0);  // Reset correct answers when hiding answers\n    }\n  }, [showAnswers]);\n\n  return (\n    <div className=\"matching-headings-question-task\">\n      <QuestionTaskDescription taskDescription={questionTask.taskDescription} />\n      <ListOfHeadingsTable data={questionTask.headingsList} />\n      <table>\n      <thead>\n        <th style={{padding:'.25em'}}>\n          <td style={{width:'5em'}}>\n            Example\n          </td>\n          <td style={{width:'5em'}}>\n            {questionTask.exampleAnswer[0]}\n          </td>\n          <td style={{width:'5em'}}>\n            {questionTask.exampleAnswer[1]}\n          </td>\n        </th>\n      </thead>\n      </table>        \n      {questionTask.questions.map((questionItem, index) => (\n        <MatchingHeadingsQuestionItem\n          key={index}\n          id={index}\n          questionItem = {questionItem}\n          onItemGrading={handleItemGrading}\n          showAnswers={showAnswers}\n        />\n      ))}\n      {showAnswers && (\n        <div className=\"task-score\">\n          Task Score: {correctAnswers} / {questionTask.questions.length}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MatchingHeadingsQuestionTask;\n\n","import React, { useEffect, useState } from \"react\";\nimport MultipleChoiceQuestionTask from \"../Question/MultipleChoiceQuestionTask\";\nimport TableCompletionQuestionTask from \"../Question/TableCompletionQuestionTask\";\nimport MatchingHeadingsQuestionTask from \"../Question/MatchingHeadingsQuestionTask\";\nimport '../Question/QuestionStyles.css';\n\nfunction QuestionFrame({ questionsList }) {\n  const [totalQuestions, setTotalQuestions] = useState(0); // Collect total number of questions at the start\n  const [totalCorrect, setTotalCorrect] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n\n  useEffect(() => {\n    // Calculate the total number of questions across all tasks when the component mounts\n    const total = questionsList.reduce((acc, questionTask) => {\n      return acc + questionTask.questions.length;\n    }, 0);\n    setTotalQuestions(total);\n    // Reset grading and answers visibility\n    setTotalCorrect(0);\n    setShowAnswers(false);\n  }, [questionsList]); // Only run when questionsList changes\n\n  const handleTaskGrading = (isCorrect) => {\n    // Update the total correct answers when a question task returns a correct answer\n    setTotalCorrect((prevCorrect) => prevCorrect + (isCorrect ? 1 : 0));\n  };\n\n  const toggleShowAnswers = () => {\n    setShowAnswers((prevShowAnswers) => !prevShowAnswers);\n    if (!showAnswers) {\n      setTotalCorrect(0);  // Reset correct answers when hiding answers\n    }\n  };\n\n  return (\n    <div className=\"question-frame\">\n      {questionsList.map((questionTask, index) => {\n        switch (questionTask.questionType) {\n          case \"multiple_choice\":\n            return (\n              <MultipleChoiceQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"matching_headings\":\n            return (\n              <MatchingHeadingsQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          case \"table_completion\":\n            return (\n              <TableCompletionQuestionTask\n                key={index}\n                id={index}\n                questionTask={questionTask}\n                onTaskGrading={handleTaskGrading}\n                showAnswers={showAnswers}\n              />\n            );\n          default:\n            return null;\n        }\n      })}\n\n      <button id=\"show-answers-btn\" onClick={toggleShowAnswers}>\n        {showAnswers ? \"Hide Answers\" : \"Show Answers\"}\n      </button>\n\n      {showAnswers && (\n        <div id=\"correct-answers-count\">\n          You Scored: {totalCorrect} / {totalQuestions}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QuestionFrame;\n","import { convertNewlinesToDoubleSpace } from \"./PassageFrame\";\n\nconst SectionInfoFrame = ({ taskTitle, taskSubtitle}) => (\n    <div className=\"section-info-frame\">\n      <h1 class=\"task-title\">{taskTitle}</h1>\n      <p class=\"task-subtitle\">{convertNewlinesToDoubleSpace(taskSubtitle)}</p>\n    </div>\n  );\n  \n  export default SectionInfoFrame;","import React, { useState, useEffect } from 'react';\n\nconst TimerFrame = ({ taskTime }) => {\n  const [time, setTime] = useState(taskTime);\n\n  useEffect(() => {\n    if (time <= 0) return;\n\n    const timer = setInterval(() => {\n      setTime(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [time]);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  return (\n    <div className=\"timer-frame\">\n      <p className=\"timer\" style={{ color: time < 60 ? 'red' : 'black' }}>\n      Time remaining: {formatTime(time)}\n      </p>\n    </div>\n  );\n};\n\nexport default TimerFrame;","import React from 'react';\nimport PassageFrame from './PassageFrame';\nimport QuestionFrame from '../Reading/QuestionFrame';\nimport SectionInfoFrame from './SectionInfoFrame';\nimport TimerFrame from './TimerFrame';\nimport './ReadingStyles.css';\n\nconst ReadingSectionFrame = ({ passage }) => (\n  <div className=\"passage-page\">\n    <SectionInfoFrame taskTitle={passage.taskTitle} taskSubtitle={passage.taskSubtitle} />\n    <PassageFrame \n      passageContext={passage.passageContext}\n      passageTitle={passage.passageTitle} \n      passageSubtitle={passage.passageSubtitle} \n      passageText={passage.passageText} \n    />\n    <QuestionFrame questionsList={passage.questionsList} />\n    <TimerFrame taskTime = {passage.taskTime}/>\n  </div>\n);\n\nexport default ReadingSectionFrame;","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ReadingPracticesPage.css';\n\nconst ReadingPracticesPage = () => (\n  <div className=\"reading-practices-page\">\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4\">Reading Practices</h1>\n      <p>Practice different types of reading questions to improve your skills.</p>\n    </div>\n    <table className=\"practices-table\">\n      <thead>\n        <tr>\n          <th>Question Type</th>\n          <th>Task Description</th>\n          <th>Recommended Time</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><Link to=\"/reading-practices/multiple-choice-select-one\">Multiple Choice</Link></td>\n          <td>Select the correct answer from a list of options.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/reading-practices/table-completion\">Table Completion</Link></td>\n          <td>Fill in the blanks in a table based on the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n        <tr>\n          <td><Link to=\"/reading-practices/matching-headings\">Matching Headings</Link></td>\n          <td>Match headings to the correct paragraphs in the passage.</td>\n          <td>10 minutes</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n\nexport default ReadingPracticesPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ReadingTestsPage = () => (\n  <ul>\n    <li><Link to=\"/reading/tests/test-1\">Reading Test 1</Link></li>\n    <li><Link to=\"/reading/tests/test-2\">Reading Test 2</Link></li>\n    <li><Link to=\"/reading/tests/test-3\">Reading Test 3</Link></li>\n  </ul>\n);\n\nexport default ReadingTestsPage;","import React from 'react';\nimport { Route, Routes, Link } from 'react-router-dom';\nimport HomePage from './components/Navigation/HomePage';\nimport About from './components/About/About';\nimport Header from './components/Navigation/Header';\nimport ReadingSectionFrame from './components/Reading/ReadingSectionFrame';\nimport passageMcq from './components/assets/json/mcq.json';\nimport passageTable from './components/assets/json/table.json';\nimport passageMatching from './components/assets/json/matching_headings.json';\nimport ReadingPracticesPage from './components/Navigation/ReadingPracticesPage';\nimport ReadingTestsPage from './components/Navigation/ReadingTestsPage';\nimport './App.css';\n// import GradingComponent from './components/Grading/GradingComponent';\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <Routes>\n        <Route path=\"/ielts-simulator\" element={<HomePage />} />\n        {/* <Route path=\"/about\" element={<About />} /> */}\n        <Route path=\"/ielts-simulator/reading-practices\" element={<ReadingPracticesPage />} />\n        <Route path=\"/ielts-simulator/reading-tests\" element={<ReadingTestsPage />} />\n        <Route path=\"/ielts-simulator/reading-practices/multiple-choice-select-one\" element={<ReadingSectionFrame passage={passageMcq}/>} />\n        <Route path=\"/ielts-simulator/reading-practices/table-completion\" element={<ReadingSectionFrame passage={passageTable}/>} />\n        <Route path=\"/ielts-simulator/reading-practices/matching-headings\" element={<ReadingSectionFrame passage={passageMatching}/>} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}